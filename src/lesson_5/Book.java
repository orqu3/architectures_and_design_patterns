package lesson_5;

/*
 * 1. Реализовать как минимум один Поведенческий паттерн в своем домашнем приложении.
 *
 * Visitor pattern
 *
 * В качестве примера: система отправки товаров в книжном магазине. Набор элементов - товары в корзине.
 * Расходы на доставку будут определяться с учетом типа и веса каждого отправления и в зависимости от того,
 * куда отправляется товар.
 *
 * Необходимо создать отдельного посетителя для каждого почтового региона. Так можно отделить логику расчета общей
 * стоимости пересылки от товаров. Следовательно, товарам не нужно ничего знать о почтовых расходах, и они хорошо
 * отделены от этой логики.
 *
 * Класс Book - это просто POJO с добавленным дополнительным методом accept, позволяющим посетителю получить доступ к
 * элементу. Аналогичным образом можно добавить сопутствующие товары - например, открытки или настольные игры.
 */

public class Book implements Visitable {

    private double price;
    private double weight;

    //accept the visitor
    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    public double getPrice() {
        return price;
    }

    public double getWeight() {
        return weight;
    }
}
